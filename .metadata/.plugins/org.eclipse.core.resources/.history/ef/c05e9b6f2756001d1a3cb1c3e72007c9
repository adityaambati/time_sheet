package com.ryben.timesheet.repository;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.ryben.timesheet.model.ResponseDTO;
import com.ryben.timesheet.model.User;

@Repository
public class UserDAOImpl implements UserDAO {

    @Autowired
    private JdbcTemplate jdbcTemplate;
	
 	@Override
    public ResponseDTO authUser(String email, String password) throws SQLException {
 		ResponseDTO response = new ResponseDTO();
        final String sql = "SELECT role FROM User where email = ? and password= ?";
	 	PreparedStatement ps = jdbcTemplate.getDataSource().getConnection().prepareStatement(sql);
		ps.setString(1, email);
	 	ps.setString(2, password);
	 	ResultSet rs = ps.executeQuery();
	 	if(rs.next()) {
	 		User u1 = new User();
	 		u1.setRole(rs.getString("role"));
	 		u1.setEmail(email);
	 		u1.setPassword(password);
	 		response.setStatus(200);
	 		response.setMessage("Found User");
	 		response.setInstance(u1);
	 		return response;
	 	}
	 	else {
	 		response.setStatus(400);
	 		response.setMessage("Found Not User");
	 		return response;
	 	}
    }

	@Override
	public ResponseDTO saveUser(User user) {
		ResponseDTO response = new ResponseDTO();
		try {
			
		final String sql = "INSERT INTO User (email, password, role) VALUES (?, ?, ?)";
		PreparedStatement ps = jdbcTemplate.getDataSource().getConnection().prepareStatement(sql);
		ps.setString(1, user.getEmail());
		ps.setString(2, user.getPassword());
		ps.setString(3, user.getRole());
		int rs = ps.executeUpdate();
		if(rs > 0) {
			response.setStatus(200);
			response.setMessage("User Saved");
			return response;
		}
		else {
			response.setStatus(400);
			response.setMessage("User Not Saved");
			return response;
		}
		}
		catch(Exception e) {
			response.setStatus(400);
			response.setMessage("User Not Saved exception occured"+ e.getMessage());
			return response;
		}
	}
}
